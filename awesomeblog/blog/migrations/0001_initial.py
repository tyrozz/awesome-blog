# Generated by Django 3.1.7 on 2021-04-04 15:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('seo_title', models.CharField(blank=True, max_length=70, null=True, validators=[django.core.validators.MaxLengthValidator(70)])),
                ('seo_description', models.CharField(blank=True, max_length=300, null=True, validators=[django.core.validators.MaxLengthValidator(300)])),
                ('name', models.CharField(max_length=256)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('seo_title', models.CharField(blank=True, max_length=70, null=True, validators=[django.core.validators.MaxLengthValidator(70)])),
                ('seo_description', models.CharField(blank=True, max_length=300, null=True, validators=[django.core.validators.MaxLengthValidator(300)])),
                ('access', models.CharField(choices=[('PU', 'PUBLIC'), ('DR', 'DRAFT'), ('PR', 'PRIVATE')], default='PR', help_text='Whether the blog post should remain private (for you only), or public or draft', max_length=20, verbose_name='Access')),
                ('slug', models.SlugField(max_length=256, unique=True)),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True)),
                ('body', models.TextField(blank=True)),
                ('body_html', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blogposts', to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.blog')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-updated', 'title'],
                'permissions': (('manage_blog_posts', 'Manage blog posts.'),),
            },
        ),
        migrations.CreateModel(
            name='BlogPostCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=70, null=True, validators=[django.core.validators.MaxLengthValidator(70)])),
                ('seo_description', models.CharField(blank=True, max_length=300, null=True, validators=[django.core.validators.MaxLengthValidator(300)])),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=256, unique=True)),
                ('description', models.TextField(blank=True)),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='blogpost-category-images')),
                ('background_image_alt', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': 'Blog Post Category',
                'verbose_name_plural': 'Blog Post Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='blogpost_images')),
                ('sort_order', models.PositiveIntegerField()),
                ('alt', models.CharField(blank=True, max_length=128)),
                ('blogpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blog.blogpost')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='BlogPostCollaborator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collaboration_created', models.DateTimeField(auto_now_add=True)),
                ('collaboration_updated', models.DateTimeField(auto_now=True)),
                ('collaboration_reason', models.CharField(blank=True, max_length=256)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogpost_collaborators', to=settings.AUTH_USER_MODEL, verbose_name='Collaborator')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogpost_collaborators', to='blog.blogpost', verbose_name='Blogpost')),
            ],
            options={
                'verbose_name': 'blog post collaborator',
                'verbose_name_plural': 'blog post collaborators',
                'ordering': ['post__updated'],
                'unique_together': {('collaborator', 'post')},
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogposts', to='blog.blogpostcategory'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='collaborators',
            field=models.ManyToManyField(blank=True, help_text='The users that collaborate on this blog post', null=True, related_name='collaborator_on_blog_post', through='blog.BlogPostCollaborator', to=settings.AUTH_USER_MODEL, verbose_name='Collaborators'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
